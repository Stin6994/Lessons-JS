// Урок 114 - макро и микрозадачи

setTimeout(() => console.log('timeout'));

Promise.resolve()
    .then(() => console.log('promise'));


queueMicrotask(() => console.log('wow')); // чтобы вклиниться в очередь микрозадач до рендеринга(перерисовки) страницы

Promise.resolve()
    .then(() => console.log('promise_2'));


console.log('code');

//порядок вывода - code, promise, promise_2, timeout
//сначала выполняется макрозадача, потом скопившиеся в очереди микрозадачи 
// микрозадачи - .then, .catch, .finally, await
// далее выполняется следующая макро.
// на нашем примере - 1) выполнилась синхронная задача (макро) code
// 2) далее пошли асинхронные, и первой по порядку идет timeout
// но есть микрозадачи .then (promise, promise_2). Поэтому сначала они ВСЕ
// 3) перерисовывается страница (render) 
// 4) теперь следующая асинхронная макро - timeout
// 5) после перерисовки может быть появились в очереди новые микрозадачи, их очередь
// 6) перерисовка и тд.


