{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,yEAAyE;AACzE;AACA;AACA;AACA,2BAA2B;AAC3B,4DAA4D;AAC5D;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D,8DAA8D;AAC9D;AACA;AACA,oDAAoD;AACpD,2DAA2D;AAC3D;AACA;AACA,kEAAkE;AAClE;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD,iBAAiB;AACjB;AACA,qDAAqD;AACrD;AACA,6BAA6B;AAC7B,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,sDAAsD;AACtD,cAAc;AACd;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;AC7HnB;AACA;AACA;AACA,mFAAmF;AACnF;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA,gCAAgC;AAChC;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,6CAA6C;AAC7C;AACA;AACA,cAAc;AACd,qFAAqF;AACrF;AACA;AACA;AACA;AACA,4BAA4B,UAAU,MAAM,SAAS;AACrD,kDAAkD,YAAY;AAC9D,gDAAgD,WAAW;AAC3D;AACA;AACA;AACA,0DAA0D,WAAW;AACrE;AACA,eAAe;AACf,0CAA0C;AAC1C;AACA;AACA;AACA,iEAAiE;AACjE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,uBAAuB;AACvB,+CAA+C,IAAI,YAAY,WAAW;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,mCAAmC;AACnE;AACA,iBAAiB;AACjB,aAAa,GAAG;AAChB;AACA;AACA;AACA;AACA;AACA,iCAAiC,mCAAmC;AACpE;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kCAAkC;AACzD;AACA;AACA;AACA,0BAA0B,KAAK,MAAM,OAAO;AAC5C,sDAAsD,OAAO;AAC7D,oDAAoD,MAAM;AAC1D;AACA;AACA;AACA,8DAA8D,SAAS;AACvE;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;ACtG4B;AAChD;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA,KAAK;AACL;AACA,8CAA8C;AAC9C;AACA,uCAAuC;AACvC;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD,gCAAgC;AAChC;AACA,iEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE;AACnE,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA,iBAAiB;AACjB,sDAAsD;AACtD,iBAAiB;AACjB,kCAAkC;AAClC,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,8EAA8E;AAC9E,mDAAmD;AACnD,YAAY,iDAAS,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,QAAQ;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kDAAU;AAC1B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;ACnGpB;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA,qFAAqF;AACrF,KAAK;AACL;AACA;AACA;AACA,gEAAgE;AAChE;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,mDAAmD;AACnD,wEAAwE;AACxE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,mHAAmH;AACnH;AACA,qEAAqE;AACrE;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA,iEAAe,KAAK,EAAC;;;;;;;;;;;;;;;AC/DrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,gCAAgC,cAAc;AAC9C,kCAAkC,WAAW;AAC7C,MAAM;AACN;AACA;AACA;AACA;AACA,yDAAyD;AACzD,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA,KAAK;AACL;AACA;AACA;AACA,qDAAqD;AACrD;AACA,qBAAqB;AACrB;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,+BAA+B;AAC/B;AACA,oBAAoB,mBAAmB;AACvC,kDAAkD;AAClD,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD,UAAU;AACV;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA,UAAU;AACV,8CAA8C;AAC9C;AACA,qDAAqD,OAAO;AAC5D;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,qDAAqD,OAAO;AAC5D;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,kCAAkC;AAClC,6DAA6D;AAC7D,yDAAyD,OAAO,MAAM;AACtE;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,iEAAe,MAAM;;;;;;;;;;;;;;AC1JrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;ACzCnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,IAAI;AACvB,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK;;;;;;UCpEpB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;ACNA,iBAAiB;AACjB;AACA;AACA;AACiC;AACE;AACA;AACA;AACF;AACE;AACE;AACO;AAC5C;AACA;AACA;AACA;AACA,0CAA0C,yDAAS;AACnD;AACA,IAAI,yDAAI;AACR,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,IAAI,yDAAI;AACR,IAAI,0DAAK;AACT,IAAI,2DAAM;AACV;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,a","sources":["webpack://food/./js/modules/calc.js","webpack://food/./js/modules/cards.js","webpack://food/./js/modules/forms.js","webpack://food/./js/modules/modal.js","webpack://food/./js/modules/slider.js","webpack://food/./js/modules/tabs.js","webpack://food/./js/modules/timer.js","webpack://food/webpack/bootstrap","webpack://food/webpack/runtime/define property getters","webpack://food/webpack/runtime/hasOwnProperty shorthand","webpack://food/webpack/runtime/make namespace object","webpack://food/./js/script.js"],"sourcesContent":["const calc = function () {\r\n    // Уроки 96-97 Калькулятор\r\n\r\n    const result = document.querySelector('.calculating__result span');\r\n\r\n    let sex, height, weight, age, ratio;\r\n\r\n    if (localStorage.getItem('sex')) { //проверяем, записан ли заранее пол. Если нет, то берем женский по умолчанию.\r\n        sex = localStorage.getItem('sex');\r\n    } else {\r\n        sex = 'female';\r\n        localStorage.setItem('sex', 'female');\r\n    }\r\n\r\n    if (localStorage.getItem('ratio')) {\r\n        ratio = localStorage.getItem('ratio');\r\n    } else {\r\n        ratio = 1.375;\r\n        localStorage.setItem('ratio', 1.375);\r\n    }\r\n\r\n    function initLocalSettings(selector, activeClass) { // функция для того, чтобы после загрузки страницы были выделены блоки, которые записаны в хранилище\r\n        const elements = document.querySelectorAll(selector);\r\n        elements.forEach(elem => {\r\n            elem.classList.remove(activeClass);\r\n\r\n            if (elem.getAttribute('id') === localStorage.getItem('sex')) { //если при переборе элементов значение id совпадет с тем, что ледит в хранилище\r\n                elem.classList.add(activeClass);\r\n            }\r\n\r\n            if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) {\r\n                elem.classList.add(activeClass);\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    initLocalSettings('#gender div', 'calculating__choose-item_active'); // ОСОБОЕ ВНИМАНИЕ НА div, мы работаем с целыми блоками \r\n    initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n\r\n    function calcTotal() { //функция для расчета\r\n        if (!sex || !height || !weight || !age || !ratio) { // если что-то не заполнено, то расчитывать не будем\r\n            result.textContent = 'WTF';\r\n            return;\r\n        }\r\n\r\n        if (sex === 'female') { // если для женщины, формула одна, для мужчины другая\r\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\r\n        } else {\r\n            result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n        }\r\n\r\n    }\r\n\r\n    calcTotal();\r\n\r\n    function getStaticInformation(selector, activeClass) { //функция для сбора данных, из незаполняемых (выбранных) элементов\r\n        const elements = document.querySelectorAll(selector); //получаем все div из элемента parrentSelector\r\n\r\n        elements.forEach(elem => {\r\n            elem.addEventListener('click', (e) => { // при нажатии на один из елементов\r\n                if (e.target.getAttribute('data-ratio')) { // проверяем есть ли у него аттрибут data-ratio\r\n                    // такие аттрибуты заранее прописали для степеней активности, так мы отделяем\r\n                    // было ли нажатие на элемент пола или элемент активности\r\n                    ratio = +e.target.getAttribute('data-ratio'); // достаем значение аттрибута, преобразуем в число, присваеваем одноименной переменной\r\n                    localStorage.setItem('ratio', +e.target.getAttribute('data-ratio'));\r\n                } else { // если это не элемент активности, то элемент пола, а у них вместо data-ratio мы прописали id для их разделения\r\n                    sex = e.target.getAttribute('id');\r\n                    localStorage.setItem('sex', e.target.getAttribute('id'));\r\n                }\r\n\r\n                elements.forEach(elem => {\r\n                    elem.classList.remove(activeClass); //для выделения только выбранного блока для начала убираем выделение со всех\r\n                });\r\n\r\n                e.target.classList.add(activeClass); //и выделяем только выбранный блок\r\n\r\n                calcTotal(); // пересчитываем после любого изменения\r\n            });\r\n        })\r\n\r\n    }\r\n\r\n    // вызываем функцию 2 раза, первая на блок пола, вторая на активность. Эти блоки одинаковы по функционалу, поэтому \r\n    // функция одна, только идентификаторы разные\r\n    getStaticInformation('#gender div', 'calculating__choose-item_active');\r\n    getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n\r\n    function getDynamicInformation(selector) { // функция для сбора данных, из заполняемых полей\r\n        const input = document.querySelector(selector);\r\n\r\n        input.addEventListener('input', () => {\r\n            //надо понять в какое поле вводится инфа - при помощи id полей\r\n\r\n            if (input.value.match(/\\D/g)) { //если пользователь вводит не число\r\n                input.style.border = '1px solid red'; //подсвечиваем рамку красным\r\n            } else {\r\n                input.style.border = 'none';\r\n            }\r\n\r\n            switch (input.getAttribute('id')) { // когда в одно из полей будем что-то вводить, код будет понимать в какое поле вводим по id\r\n                case 'height':\r\n                    height = +input.value;\r\n                    break;\r\n                case 'weight':\r\n                    weight = +input.value;\r\n                    break;\r\n                case 'age':\r\n                    age = +input.value;\r\n                    break;\r\n            }\r\n            calcTotal(); // пересчитываем после любого изменения\r\n        });\r\n\r\n    }\r\n\r\n    getDynamicInformation('#height');\r\n    getDynamicInformation('#weight');\r\n    getDynamicInformation('#age');\r\n\r\n}\r\n\r\n\r\nexport default calc;","const cards = function () {\r\n\r\n    class MenuCard {\r\n        constructor(src, alt, tittle, descr, price, parrentSelector, ...classes) { //Допустим хотим будущей карточке присвоить неизвестное количество дополнительных классов в будущем, используем rest оператор\r\n            this.src = src;\r\n            this.alt = alt;\r\n            this.tittle = tittle;\r\n            this.descr = descr;\r\n            this.price = price;\r\n            this.classes = classes; //не забываем добавить свойство - это будет массив, тк rest оператор отдает массив\r\n            this.parrent = document.querySelector(parrentSelector);\r\n            this.transfer = 91; //курс доллар/рубль\r\n            this.changeToRub();\r\n        }\r\n\r\n        changeToRub() { // метод для конвертации валюты в рубль\r\n            this.price *= this.transfer;\r\n        }\r\n\r\n        render() { //для добавления новой карточки на страницу в структуру html\r\n            const element = document.createElement('div');\r\n\r\n            if (this.classes.length === 0) { //если в rest не были вообще переданы аргументы, то добавляем класс, по умолчанию, без которого вообще никак, поедет верстка\r\n                this.classes = 'menu__item';\r\n                element.classList.add(this.classes);\r\n            } else {\r\n                this.classes.forEach(className => element.classList.add(className)); // перебрали все элементы массива с классами (rest), каждый класс добавили к нашей карточке\r\n            }\r\n\r\n\r\n            element.innerHTML = `\r\n                <img src= ${this.src} alt=${this.alt}>\r\n                <h3 class=\"menu__item-subtitle\">${this.tittle}</h3>\r\n                <div class=\"menu__item-descr\">${this.descr}</div>\r\n                <div class=\"menu__item-divider\"></div>\r\n                <div class=\"menu__item-price\">\r\n                    <div class=\"menu__item-cost\">Цена:</div>\r\n                    <div class=\"menu__item-total\"><span>${this.price}</span> руб/день</div> \r\n                </div>\r\n            `; // убрали <div class=\"menu__item\">, этот и другие классы будем передавать при объявлении карточек в виде аргуметов в конце (rest)\r\n            this.parrent.append(element); //добавляем новосозданный элемент div с карточкой в родительский блок всех карточек\r\n        }\r\n    }\r\n\r\n    const deleteCard = document.querySelectorAll('.menu__item'); //удаляем старые карточки\r\n    deleteCard.forEach(item => {\r\n        item.remove();\r\n    })\r\n\r\n    const getResources = async (url) => {\r\n        const res = await fetch(url);\r\n\r\n        if (!res.ok) { // Если GET запрос не прошел, выдаем ошибку\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n        }\r\n\r\n        return await res.json();\r\n    }\r\n\r\n    /*     getResources('http://localhost:3000/menu')\r\n            .then(data => {\r\n                data.forEach(({ img, altimg, tittle, descr, price }) => {\r\n                    new MenuCard(img, altimg, tittle, descr, price, '.menu .container').render();\r\n                });\r\n            }); */\r\n\r\n    // Урок 90 - Axios\r\n\r\n    axios.get('http://localhost:3000/menu')\r\n        .then(data => {\r\n            data.data.forEach(({ img, altimg, tittle, descr, price }) => {\r\n                new MenuCard(img, altimg, tittle, descr, price, '.menu .container').render();\r\n            });\r\n        });\r\n\r\n\r\n    // ниже еще один способ динамической верстки на странице\r\n\r\n    /*     getResources('http://localhost:3000/menu')\r\n    .then(data => createCard(data));\r\n    \r\n    function createCard(data) {\r\n        data.forEach(({img, altimg, tittle, descr, price}) => {\r\n            const element = document.createElement('div');\r\n            element.classList.add('menu__item');\r\n            element.innerHTML = `\r\n              <img src= ${img} alt=${altimg}>\r\n                    <h3 class=\"menu__item-subtitle\">${tittle}</h3>\r\n                    <div class=\"menu__item-descr\">${descr}</div>\r\n                    <div class=\"menu__item-divider\"></div>\r\n                    <div class=\"menu__item-price\">\r\n                        <div class=\"menu__item-cost\">Цена:</div>\r\n                        <div class=\"menu__item-total\"><span>${price*91}</span> руб/день</div> \r\n                    </div>\r\n            `\r\n    \r\n            document.querySelector('.menu .container').append(element);\r\n        });\r\n    }  */\r\n\r\n}\r\n\r\nexport default cards;","import { closeModal, openModal } from \"./modal\";\r\n\r\nconst forms = function (formSelector, modalTimerId) {\r\n    const forms = document.querySelectorAll(formSelector);\r\n\r\n    const message = { // сообщения для юзера в разных ситуациях\r\n        loading: 'img/form/spinner.svg',\r\n        success: 'Спасибо! Скоро мы с Вами свяжемся',\r\n        failure: 'Что-то пошло не так...'\r\n    }\r\n\r\n    forms.forEach(item => { // При заполнении любой формы будет происходить нижеперечисленное\r\n        bindPostData(item);\r\n    });\r\n\r\n    const postData = async (url, data) => {   // async - говорит, что код должен будет обрабатываться не по порядку, а асинхронно, так как надо дождаться реакции сервера (при помощи await), прежде чем выполнять дальше\r\n        // async и await всегда идут в паре\r\n        const res = await fetch(url, { // await не дает создать переменную res до тех пор, пока не выполнится запрос на сервер\r\n            method: 'POST',\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            body: data\r\n        });\r\n        return await res.json();\r\n    }\r\n\r\n\r\n    function bindPostData(form) {\r\n        form.addEventListener('submit', (e) => { //срабатывает когда мы пытемся оправить какую-то форму\r\n            e.preventDefault(); // в AJAX запросах ставим вначале, чтобы отменить стандартное поведение браузера (перезагрузку при изменениях и отправке формы)\r\n\r\n            const statusMessage = document.createElement('img'); // Добавляем блок с сообщением пользователю о статусе отправки данных\r\n            statusMessage.src = message.loading;\r\n            statusMessage.style.cssText = `\r\n            display: block;\r\n            margin: 0 auto;\r\n            `;\r\n\r\n            form.insertAdjacentElement('afterend', statusMessage); // Для добавления после формы (снизу) в верстке, а не за ним горизонтально\r\n            const formData = new FormData(form); // Это позволяет преобразовать данные от форм ввода в привычную форму объекта\r\n\r\n\r\n            const json = JSON.stringify(Object.fromEntries(formData.entries()));\r\n            // Берем данные пользователя из заполненной формы\r\n            // formData.entries() - превращает их в массив массивов [[ключ, значение], [ключ, значение]]\r\n            // Object.fromEntries - превращает массив массивов в объект\r\n            // JSON.stringify - преобразует объект в удобный формат JSON\r\n\r\n\r\n            postData('http://localhost:3000/requests', json)\r\n                .then(data => {\r\n                    console.log(data);\r\n                    showThanksModal(message.success); // если все ок, то сообщение об успехе в форме\r\n                    statusMessage.remove();\r\n                }).catch(() => {\r\n                    showThanksModal(message.failure); // если не ок\r\n                }).finally(() => {\r\n                    form.reset(); // в любом случае в конце чистим форму\r\n                });\r\n\r\n\r\n        });\r\n\r\n        // Урок 84 - Красивое оповещение пользователя\r\n\r\n        function showThanksModal(message) {  // новое модальное окно с благодарностью\r\n\r\n            const prevModalDialog = document.querySelector('.modal__dialog'); //функционируем с имеющимся модальным окном\r\n            prevModalDialog.classList.add('hide'); //временно скрываем его, чтобы не удалять и не создавать заново при новой необходимости\r\n            openModal('.modal', modalTimerId); //создавали ранее, открывает модальное окно\r\n\r\n            const thanksModal = document.createElement('div');\r\n            thanksModal.classList.add('modal__dialog');\r\n            thanksModal.innerHTML = `\r\n    <div class=\"modal__content\">\r\n        <div class=\"modal__close\" data-close>×</div>\r\n        <div class=\"modal__title\">${message}</div>\r\n    </div>\r\n    `;\r\n\r\n            document.querySelector('.modal').append(thanksModal);\r\n\r\n            setTimeout(() => {\r\n                thanksModal.remove();\r\n                prevModalDialog.classList.add('show');\r\n                prevModalDialog.classList.remove('hide');\r\n                closeModal('.modal');\r\n            }, 4000);\r\n\r\n        }\r\n\r\n        //Урок 86 - Fetch API - примеры в предыдущих версиях\r\n\r\n\r\n    };\r\n\r\n}\r\n\r\nexport default forms;","\r\nfunction closeModal(modalSelector) {\r\n    const modal = document.querySelector(modalSelector);\r\n    modal.classList.add('hide');\r\n    modal.classList.remove('show');\r\n    document.body.style.overflow = ''; //возвращаем скролл на страницу сайта после закрытия мод. окна\r\n}\r\n\r\nfunction openModal(modalSelector, modalTimerId) {\r\n    /* modal.classList.toggle('show'); */  // Если класса show нет, добавляем, если есть - убираем\r\n    const modal = document.querySelector(modalSelector);\r\n    modal.classList.add('show');\r\n    modal.classList.remove('hide');\r\n    document.body.style.overflow = 'hidden';  //для того, чтобы при открытом модальном окне не прокручивался вниз и вверх сайт\r\n\r\n    console.log(modalTimerId);\r\n    if (modalTimerId) {\r\n        clearInterval(modalTimerId); // Если юзер сам открыл окно до его автоматического открытия - далее оно автоматически уже не будет открываться до обновления страницы.\r\n    }\r\n\r\n}\r\nconst modal = function (triggerSelector, modalSelector, modalTimerId) {\r\n    // Урок 72 - Модальное окно\r\n\r\n    const modalTrigger = document.querySelectorAll(triggerSelector);\r\n    const modal = document.querySelector(modalSelector);\r\n    /* const modalCloseBtn = document.querySelector('[data-close]'); */\r\n\r\n    modalTrigger.forEach(btn => {\r\n        btn.addEventListener('click', () => openModal(modalSelector, modalTimerId)); //коллбек функция прописывается, потому что это обработчик событий и иначе она работать не будет\r\n    });\r\n\r\n\r\n\r\n    /*     modalCloseBtn.addEventListener('click', closeModal); */\r\n\r\n\r\n    modal.addEventListener('click', (e) => {    //если кликнуть мимо модального окна, то оно тоже закроется\r\n        if (e.target === modal || e.target.getAttribute('data-close') == '') {\r\n            closeModal(modalSelector);\r\n        }\r\n    });\r\n\r\n\r\n    document.addEventListener('keydown', (e) => {  // Если нажали Esc, окно тоже закрывается. e.code - кодовое название клавиш, надо их гуглить\r\n        if (e.code === 'Escape' && modal.classList.contains('show')) {  //проверка также на то, открыто ли сейчас окно, иначе Esc будет его сам открывать\r\n            closeModal(modalSelector);\r\n        }\r\n    });\r\n\r\n\r\n\r\n\r\n    function showModalByScroll() {\r\n        if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight) { // проверяет докрутили ли страницу до конца\r\n            openModal(modalSelector, modalTimerId);\r\n            window.removeEventListener('scroll', showModalByScroll); // удаляем обработчик события после первого срабытывания, чтобы не спамить окнами при прокрутке до конца страницы\r\n        }\r\n    }\r\n\r\n    window.addEventListener('scroll', showModalByScroll);  //При прокрутке страницы до конца - открывается окно\r\n}\r\n\r\nexport default modal;\r\nexport {closeModal, openModal};","const slider = function () {\r\n    // Урок 92 - слайдер, второй вариант (карусель)\r\n\r\n    const slides = document.querySelectorAll('.offer__slide'),\r\n        slider = document.querySelector('.offer__slider'),\r\n        prev = document.querySelector('.offer__slider-prev'),\r\n        next = document.querySelector('.offer__slider-next'),\r\n        total = document.querySelector('#total'),\r\n        current = document.querySelector('#current'),\r\n        slidesWrapper = document.querySelector('.offer__slider-wrapper'),\r\n        slidesField = document.querySelector('.offer__slider-inner'),\r\n        width = window.getComputedStyle(slidesWrapper).width;\r\n\r\n\r\n    let slideIndex = 1;\r\n    let offset = 0;\r\n\r\n\r\n    if (slides.length < 10) { //чтобы индекс прописывался с 0 в начале, например 03, 07 и тд\r\n        total.textContent = `0${slides.length}`;\r\n        current.textContent = `0${slideIndex}`;\r\n    } else {\r\n        total.textContent = slides.length;\r\n        current.textContent = slideIndex;\r\n    }\r\n\r\n    slidesField.style.width = 100 * slides.length + '%'; // задаем ширину всей карусели (4 слайда)\r\n    slidesField.style.display = 'flex'; // располагаем слайды в ряд по направлению карусели\r\n    slidesField.style.transition = '0.5s all';\r\n\r\n    slidesWrapper.style.overflow = 'hidden';\r\n\r\n\r\n    slides.forEach(slide => { //каждый слайд остается с родной шириной, не растягивается на всю карусель - 400%\r\n        slide.style.width = width;\r\n    });\r\n\r\n    slider.style.position = 'relative';\r\n\r\n    const indicators = document.createElement('ol'); //создаем список(ol - order-list) из точек навигации\r\n\r\n    const dots = []; //создаем массив для точек\r\n\r\n    indicators.classList.add('carousel-indicators'); // даем ему класс\r\n    indicators.style.cssText = ` \r\nposition: absolute;\r\nright: 0;\r\nbottom: 0;\r\nleft: 0;\r\nz-index: 15;\r\ndisplay: flex;\r\njustify-content: center;\r\nmargin-right: 15%;\r\nmargin-left: 15%;\r\nlist-style: none;\r\n`; //классу присваиваем css свойства, можно просто сделать это в css\r\n\r\n    slider.append(indicators); //помещаем индикаторы внутрь блока слайдера\r\n\r\n    for (let i = 0; i < slides.length; i++) {\r\n        const dot = document.createElement('li'); //создаем точки по количеству слайдов (li - list-item)\r\n        dot.setAttribute('data-slide-to', i + 1); // каждому слайду, начиная с 1 задаем аттрибут\r\n        dot.style.cssText = `\r\nbox-sizing: content-box;\r\nflex: 0 1 auto;\r\nwidth: 30px;\r\nheight: 6px;\r\nmargin-right: 3px;\r\nmargin-left: 3px;\r\ncursor: pointer;\r\nbackground-color: #fff;\r\nbackground-clip: padding-box;\r\nborder-top: 10px solid transparent;\r\nborder-bottom: 10px solid transparent;\r\nopacity: .5;\r\ntransition: opacity .6s ease;\r\n`;\r\n\r\n        if (i == 0) {\r\n            dot.style.opacity = 1;\r\n        }\r\n\r\n        indicators.append(dot); //добавляем точку в верстку\r\n        dots.push(dot); // добавляем точку в массив\r\n    }\r\n\r\n\r\n    function slidesSetting() {\r\n        if (slides.length < 10) {\r\n            current.textContent = `0${slideIndex}`;\r\n        } else {\r\n            current.textContent = slideIndex;\r\n        }\r\n\r\n        dots.forEach(dot => dot.style.opacity = '.5'); // для изменения активного индикатора\r\n        dots[slideIndex - 1].style.opacity = 1;\r\n    }\r\n\r\n    function deleteNotDigits(str) {\r\n        return +str.replace(/\\D/g, '');\r\n        // +str.replace(/\\D/g, '') - изначально строка, например \"500px\". Обрезаем рх, преобразуем в число\r\n    }\r\n\r\n\r\n\r\n    next.addEventListener('click', () => {\r\n        if (offset == deleteNotDigits(width) * (slides.length - 1)) { //если текущее положение индекса конечное, то возвращаемся к начальному\r\n            // +width.replace(/\\D/g, '') - изначально строка, например \"500px\". Обрезаем рх, преобразуем в число\r\n            offset = 0;\r\n        } else {\r\n            offset += deleteNotDigits(width); // если не конечное, слайдсмещается на величину слайда \r\n        }\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n        if (slideIndex == slides.length) {\r\n            slideIndex = 1;\r\n        } else {\r\n            slideIndex++;\r\n        }\r\n\r\n        slidesSetting();\r\n\r\n    });\r\n\r\n    prev.addEventListener('click', () => {\r\n        if (offset == 0) {\r\n            offset = deleteNotDigits(width) * (slides.length - 1);\r\n        } else {\r\n            offset -= deleteNotDigits(width);\r\n        }\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n        if (slideIndex == 1) {\r\n            slideIndex = slides.length;\r\n        } else {\r\n            slideIndex--;\r\n        }\r\n\r\n        slidesSetting();\r\n    });\r\n\r\n    // Урок 93 - навигация для слайдера\r\n\r\n    dots.forEach(dot => {   // для перемещения по слайдам кликом по навигации\r\n        dot.addEventListener('click', (e) => {\r\n            const slideTo = e.target.getAttribute('data-slide-to');\r\n            slideIndex = slideTo; // приравниваем индекс к выбранному слайду, чтобы все правила завязанные на индекс переформатировались под выбранный слайд\r\n            offset = deleteNotDigits(width) * (slideTo - 1); //находим положение нужного слайда\r\n            slidesField.style.transform = `translateX(-${offset}px)`; //перемещаем на нужный слайд\r\n\r\n            slidesSetting();\r\n        });\r\n    });\r\n}\r\n\r\nexport default slider;","function tabs() {\r\n    // Урок 64 - Табы\r\n    const tabs = document.querySelectorAll('.tabheader__item'),\r\n        tabsContent = document.querySelectorAll('.tabcontent'),\r\n        tabsParent = document.querySelector('.tabheader__items');\r\n\r\n    function hideTabContent() {\r\n        tabsContent.forEach(item => {\r\n            item.classList.add('hide');\r\n            item.classList.remove('show', 'fade');\r\n        });\r\n\r\n        tabs.forEach(item => {\r\n            item.classList.remove('tabheader__item_active');\r\n        });\r\n    }\r\n\r\n    function showTabContent(i = 0) {         // i=0 - значит, что если аргумент при вызове не быдет задан, то он автоматически приравняется к нулю\r\n        tabsContent[i].classList.add('show', 'fade');\r\n        tabsContent[i].classList.remove('hide');\r\n        tabs[i].classList.add('tabheader__item_active');\r\n    }\r\n\r\n    hideTabContent();\r\n    showTabContent();\r\n\r\n\r\n    tabsParent.addEventListener('click', (event) => {\r\n        const target = event.target;\r\n\r\n        if (target && target.classList.contains('tabheader__item')) {\r\n            tabs.forEach((item, i) => {\r\n                if (target == item) {\r\n                    hideTabContent();\r\n                    showTabContent(i);\r\n                }\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nexport default tabs;","const timer = function() {\r\n// Урок 69 - таймер\r\n\r\nconst deadLine = '2024-08-31';\r\n\r\nfunction getTimeRemaining(endTime) {\r\n\r\n    let days, hours, minutes, seconds;\r\n    const t = Date.parse(endTime) - Date.parse(new Date());  // Date.parse - преобразование даты в числовое выражение (миллисекунды). newDate - текущая дата\r\n\r\n    if (t <= 0) {\r\n        days = 0;\r\n        hours = 0;\r\n        minutes = 0;\r\n        seconds = 0;\r\n    } else {\r\n        days = Math.floor(t / (1000 * 60 * 60 * 24));\r\n        hours = Math.floor((t / (1000 * 60 * 60) % 24)); // Вычисляем количество часов и берем только остаток от деления на 24, так как дни уже вычислены ранее и теперь нужен только остаток часов в рамках одного дня\r\n        minutes = Math.floor((t / 1000 / 60) % 60);\r\n        seconds = Math.floor((t / 1000) % 60);\r\n    }\r\n\r\n    return {\r\n        'total': t, // актуальная разница между заявленным дедлайном и текущей датой. Если дедлайн просрочен - становится отрицательной\r\n        'days': days,\r\n        'hours': hours,\r\n        'minutes': minutes,\r\n        'seconds': seconds\r\n    };\r\n}\r\n\r\nfunction getZiro(num) {\r\n    if (num >= 0 && num < 10) {\r\n        return `0${num}`;\r\n    } else {\r\n        return num;\r\n    }\r\n}\r\n\r\n\r\nfunction setClock(selector, endTime) {\r\n    const timer = document.querySelector(selector);\r\n    const days = timer.querySelector('#days');\r\n    const hours = timer.querySelector('#hours');\r\n    const minutes = timer.querySelector('#minutes');\r\n    const seconds = timer.querySelector('#seconds');\r\n\r\n    const timeInterval = setInterval(updateClock, 1000); // Обновляет таймер на странице 1 раз в секунду\r\n\r\n    updateClock(); // сразу обновляем, потому что иначе первое обновление произойдет не после загрузки страницы, а через 1 секунду\r\n\r\n    function updateClock() {\r\n        const t = getTimeRemaining(endTime);\r\n\r\n        days.innerHTML = getZiro(t.days);\r\n        hours.innerHTML = getZiro(t.hours);\r\n        minutes.innerHTML = getZiro(t.minutes);\r\n        seconds.innerHTML = getZiro(t.seconds);\r\n\r\n        if (t.total <= 0) {\r\n            clearInterval(timeInterval);   // Если текущая дата больше дедлайна, автообновление таймера останавливается\r\n        }\r\n    }\r\n}\r\n\r\nsetClock('.timer', deadLine);\r\n}\r\n\r\nexport default timer;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/* 'use strict'; */\r\n\r\nconsole.log('hello111');\r\n\r\nimport tabs from'./modules/tabs';\r\nimport modal from'./modules/modal';\r\nimport timer from'./modules/timer';\r\nimport cards from'./modules/cards';\r\nimport calc from'./modules/calc';\r\nimport forms from'./modules/forms';\r\nimport slider from'./modules/slider';\r\nimport { openModal } from './modules/modal';\r\n\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n\r\n    const modalTimerId = setTimeout(() => openModal('.modal', modalTimerId), 50000);\r\n\r\n    tabs();\r\n    modal('[data-modal]', '.modal', modalTimerId );\r\n    timer();\r\n    cards();\r\n    calc();\r\n    forms('form', modalTimerId);\r\n    slider();\r\n        \r\n});\r\n\r\n\r\n\r\n//npx json-server db.json\r\n//npx webpack"],"names":[],"sourceRoot":""}